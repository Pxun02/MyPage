---
import '../../../styles/blog.css';
import shopsData from '../../../jsons/shop.json';
import foodsData from '../../../jsons/food.json';
import { Image } from 'astro:assets';
import { basename } from 'path';
import Head from '../../../components/jp/Head.astro';
import Header from '../../../components/jp/Header.astro';

const currentPage = parseInt(basename(Astro.url.pathname, '.astro'));

const shops = shopsData;
const foods = foodsData;

const shopsPerPage = 10;
const startingRank = (currentPage - 1) * shopsPerPage + 1;
const totalShops = shops.filter(shop => shop.rank !== -1).length;
const maxPage = Math.ceil(totalShops / shopsPerPage)

const shopsOnThisPage = shops.filter((shop) => shop.rank >= startingRank && shop.rank < startingRank + shopsPerPage);
---

<html lang="ja">
	<Head pageTitle=`南洋豆花探訪記 | Page ${currentPage}`/>
	<body>
		<Header />
		<header>
			<nav class="language-select">日 / <a href={`/MyPage/en/beancurd/${currentPage}`}>En</a></nav>
			<h1>南洋豆花探訪記</h1>
			<ul class="links-head">
				<li><i class="fa-solid fa-play"></i><a href="/MyPage/jp/beancurd/records">その他の訪問記録</a></li>
			</ul>
			<nav>
				<a href="/MyPage/jp/beancurd"><i class="fa-solid fa-house"></i></a>
			</nav>
			<nav class="pagination">
				{currentPage > 1 ? (
				  <a href={`/MyPage/jp/beancurd/${currentPage - 1}`} class="prev-page">
					<i class="fas fa-chevron-left"></i> Previous
				  </a>
				): <span></span>}
				<span class="current-page"><b>{currentPage}</b> / {maxPage}</span>
				{currentPage < maxPage ? (
				   <a href={`/MyPage/jp/beancurd/${currentPage + 1}`} class="next-page">
					Next <i class="fas fa-chevron-right"></i>
				  </a>
				): <span></span>}
			  </nav>
			  <hr class="header-line">
		</header>

		<main>
			<article>
				<h2>豆花ランキング {startingRank}位 〜 {startingRank + shopsPerPage - 1 < totalShops ? startingRank + shopsPerPage - 1 : totalShops}位 </h2>
				<div class="table-of-contents">
					<h3>目次</h3>
					<ul>
						{shopsOnThisPage.map((shop) => (
							<li>
								<a href={`#shop-${shop.rank}`}>{shop.rank}位: {shop.store_name} @ {shop.place}</a>
							</li>
						))}
					</ul>
				</div>

				<ul>
					{shopsOnThisPage.map((shop) => (
						<a id={`shop-${shop.rank}`}>
							<h2>{shop.rank}位: {shop.store_name} @ {shop.place}</h2>
							<h3>{shop.country_jp}</h3>
							<ul class="imgs">
								{shop.picture.map((imagePath) => ( <Image src={imagePath} alt="{shop.store_name} Image" width="300" height="400" /> ))}
							</ul>
							<ul>
							{shop.foods_id.map((foodId) => {
								const foodItem = foods.find((food) => food.ID === foodId);
								if (foodItem) {
								return (
									<li>
									{foodItem.food_name_jp} - {foodItem.currency}{foodItem.price}
									</li>
								);
								} else {
								return null; // Skip if food item not found
								}
							})}
							</ul>
							<br />
							<p>{shop.descriptions_jp.map((description) => (
								<span>{description.line}<br /><br /></span>
							))}</p>
							<iframe
								width="600"
								height="400"
								id="frame"
								src={shop.map_jp}
								frameborder="0"
								allowfullscreen
								loading="lazy"
								referrerpolicy="no-referrer-when-downgrade"
								aria-label="Map of {shop.store_name}"
								style={{ marginBottom: '4rem' }} 
								**responsive**
								/>
					</a>
					))}
				</ul>
			</article>
		</main>
	</body>
	<footer>
		<button id="scrollToTopBtn" aria-label="Scroll to top"><i class="fa-solid fa-chevron-up"></i></button>
		<nav class="pagination">
			{currentPage > 1 ? (
			  <a href={`/MyPage/jp/beancurd/${currentPage - 1}`} class="prev-page">
				<i class="fas fa-chevron-left"></i> Previous
			  </a>
			): <span></span>}
			<span class="current-page"><b>{currentPage}</b> / {maxPage}</span>
			{currentPage < maxPage ? (
			   <a href={`/MyPage/jp/beancurd/${currentPage + 1}`} class="next-page">
				Next <i class="fas fa-chevron-right"></i>
			  </a>
			): <span></span>}
		  </nav>
		<hr class="footer-line">
		<div class="footer-content"> <p>© 2024 Shawn</p></div>
	</footer>
	<script>
		document.addEventListener('DOMContentLoaded', (event) => {
			const menuToggle = document.querySelector('.ribbon .menu-toggle');
			const menu = document.querySelector('.ribbon .menu');
	
			if (menuToggle && menu) {
			menuToggle.addEventListener('click', () => {
				menu.classList.toggle('active');
			});
			}
		});
		function setupScrollToTop() {
			const scrollToTopBtn = document.getElementById('scrollToTopBtn');

			if (!scrollToTopBtn) return;

			const scrollFunction = () => {
			if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
				scrollToTopBtn.classList.add('show');
			} else {
				scrollToTopBtn.classList.remove('show');
			}
			};

			const scrollToTop = () => {
			window.scrollTo({
				top: 0,
				behavior: 'smooth'
			});
			};

			window.addEventListener('scroll', scrollFunction);
			scrollToTopBtn.addEventListener('click', scrollToTop);
		}

		// Run setup on initial load
		setupScrollToTop();

		// Re-run setup on view transitions
		document.addEventListener('astro:after-swap', setupScrollToTop);
	</script>
</html>